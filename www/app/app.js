// Generated by CoffeeScript 1.8.0
(function() {
  angular.module("hcMobile", ["ionic", 'ngResource', "starter.controllers", "starter.services", 'highcharts-ng']).run(function($ionicPlatform, $rootScope, $ionicLoading, $timeout) {
    $ionicPlatform.ready(function() {
      if (window.cordova && window.cordova.plugins.Keyboard) {
        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      }
      if (window.StatusBar) {
        return StatusBar.styleDefault();
      }
    });
    $rootScope.showLoading = function(msg) {
      return $ionicLoading.show({
        template: msg || "Loading",
        animation: "fade-in",
        showBackdrop: true,
        maxWidth: 200,
        showDelay: 0
      });
    };
    $rootScope.hideLoading = function() {
      return $ionicLoading.hide();
    };
    return $rootScope.toast = function(msg) {
      $rootScope.showLoading(msg);
      $timeout((function() {
        $rootScope.hideLoading();
      }), 2999);
    };
  }).config(function($stateProvider, $urlRouterProvider) {
    $stateProvider.state("home", {
      url: "/home",
      templateUrl: "app/home/home.html",
      abstract: true
    }).state('app', {
      url: '/app',
      templateUrl: 'app/layout/menu-layout.html',
      abstract: true
    }).state("app.dash", {
      url: "/dash",
      views: {
        mainContent: {
          templateUrl: "templates/tab-dash.html",
          controller: "DashCtrl"
        }
      }
    }).state("app.sensorAlerts", {
      url: "/alerts",
      views: {
        mainContent: {
          templateUrl: "templates/sensor-alerts.html",
          controller: "SensorAlertsCtrl"
        }
      }
    }).state("app.reports", {
      url: "/reports",
      views: {
        mainContent: {
          templateUrl: "templates/tab-reports.html",
          controller: "ReportsCtrl"
        }
      }
    }).state("login", {
      url: '/login',
      views: {
        '': {
          templateUrl: 'templates/tab-login.html',
          controller: 'SignInCtrl'
        }
      }
    });
    return $urlRouterProvider.otherwise("/login");
  });

}).call(this);
